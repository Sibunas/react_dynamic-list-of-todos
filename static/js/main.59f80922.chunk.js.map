{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","onSelectTodo","selectedTodoId","setSelectedTodoId","className","map","todo","index","completed","title","id","type","onClick","TodoFilter","onFilterChange","useState","status","setStatus","query","setQuery","handleClearQuery","value","onChange","e","newStatus","target","placeholder","style","pointerEvents","onKeyDown","key","role","tabIndex","Loader","TodoModal","user","isLoading","onClose","userName","name","href","email","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","setTodos","filteredTodos","setFilteredTodos","setIsLoading","selectedTodo","setSelectedTodo","selectedUser","setSelectedUser","isModalOpen","setIsModalOpen","filterStatus","setFilterStatus","searchQuery","setSearchQuery","isUserLoading","setIsUserLoading","fetchUserDetails","userId","a","response","ok","Error","userData","useEffect","data","finally","filtered","filter","toLowerCase","includes","handleSelectTodo","console","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59f80922.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos: Todo[];\n  onSelectTodo: (todo: Todo) => void;\n  selectedTodoId: number | null;\n  setSelectedTodoId: (id: number | null) => void;\n};\n\nexport const TodoList: React.FC<TodoListProps>\n= ({\n  todos, onSelectTodo, selectedTodoId, setSelectedTodoId,\n}) => (\n  <div>\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map((todo, index) => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n          >\n            <td className=\"is-vcentered\">{index + 1}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success' : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectedTodoId === todo.id ? (\n                <button\n                  data-cy=\"hideButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodoId(null)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              )\n                : (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      onSelectTodo(todo);\n                      setSelectedTodoId(todo.id);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n\nexport default TodoList;\n","import React, { useState } from 'react';\n\ntype TodoFilterProps = {\n  onFilterChange: (status: string, query: string) => void;\n};\n\nexport const TodoFilter = ({ onFilterChange }: TodoFilterProps) => {\n  const [status, setStatus] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const handleStatusChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newStatus = e.target.value;\n\n    setStatus(newStatus);\n    onFilterChange(newStatus, query);\n  };\n\n  const handleQueryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    onFilterChange(status, e.target.value);\n  };\n\n  const handleClearQuery = () => {\n    setQuery('');\n    onFilterChange(status, '');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleStatusChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: 'all' }}\n            onClick={handleClearQuery}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter'\n            || e.key === ' ') {\n                handleClearQuery();\n              }\n            }}\n            role=\"button\"\n            tabIndex={0}\n            aria-label=\"Clear Query\"\n          >\n\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Clear Search\"\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n\nexport default TodoFilter;\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n\nexport default Loader;\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype TodoModalProps = {\n  todo: Todo | null;\n  user: User | null;\n  isLoading: boolean;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  todo, user, isLoading, onClose,\n}) => {\n  if (!todo) {\n    return null;\n  }\n\n  const userName = user?.name;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div\n        className=\"modal-background\"\n        aria-label=\"Close modal\"\n      />\n\n      {isLoading ? (\n        <Loader data-cy=\"loader\" />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              `Todo #\n              $\n              {todo.id}\n              `\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n              aria-label=\"Close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n              {user ? (\n                <a href={`mailto:${user.email}`}>\n                  {userName}\n                </a>\n              ) : 'Loading user...'}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TodoModal;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isUserLoading, setIsUserLoading] = useState(false);\n  const [selectedTodoId, setSelectedTodoId] = useState<number | null>(null);\n\n  const fetchUserDetails = async (userId: number): Promise<User> => {\n    setIsUserLoading(true);\n    const response = await fetch(`https://mate-academy.github.io/react_dynamic-list-of-todos/api/users/${userId}.json`);\n\n    if (!response.ok) {\n      setIsUserLoading(false);\n      throw new Error('Failed to fetch user details');\n    }\n\n    const userData = await response.json();\n\n    setIsUserLoading(false);\n\n    return userData;\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then((data: Todo[]) => {\n        setTodos(data);\n        setFilteredTodos(data);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    const filtered = todos.filter(todo => {\n      return (filterStatus === 'all' || (filterStatus === 'completed' ? todo.completed : !todo.completed))\n      && todo.title.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n\n    setFilteredTodos(filtered);\n  }, [todos, filterStatus, searchQuery]);\n\n  const handleSelectTodo = async (todo: Todo) => {\n    setSelectedTodo(todo);\n    setIsModalOpen(true);\n    setSelectedTodoId(todo.id);\n    try {\n      const userData = await fetchUserDetails(todo.userId);\n\n      setSelectedUser(userData);\n    } catch (error) {\n      // eslint-disable-next-line\n      console.error('Error fetching user details:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedTodo(null);\n  };\n\n  const handleFilterChange = (status: string, query: string) => {\n    setFilterStatus(status);\n    setSearchQuery(query);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter onFilterChange={handleFilterChange} />\n            </div>\n\n            {isLoading || isUserLoading ? (\n              <Loader data-cy=\"loader\" />\n            ) : (\n              <div className=\"block\">\n                <TodoList\n                  todos={filteredTodos}\n                  onSelectTodo={handleSelectTodo}\n                  selectedTodoId={selectedTodoId}\n                  setSelectedTodoId={setSelectedTodoId}\n                />\n                {selectedTodo && (\n                  <TodoModal\n                    todo={selectedTodo}\n                    user={selectedUser}\n                    isLoading={isLoading}\n                    onClose={() => setSelectedTodo(null)}\n                  />\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {isModalOpen && (\n        <TodoModal\n          todo={selectedTodo}\n          user={selectedUser}\n          onClose={handleCloseModal}\n          isLoading={false}\n        />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}